[package]
name = "gw_ecs"
version = "0.1.0"
edition = "2021"
description = """
Dispatches systems in parallel which need read access to some resources,
and write access to others.
"""
readme = "README.md"
documentation = "https://docs.rs/gw_ecs"
repository = "https://github.com/funnisimo/goblinwerks-rs"
keywords = ["parallel", "systems", "resources", "ecs"]
categories = ["concurrency"]
license = "MIT OR Apache-2.0"

[dependencies]
ahash    = "0.8.3"
arrayvec = "0.7.2"
rayon    = { version = "1.7.0", optional = true }
gw_macro = { path = "../gw_macro", optional = true }
smallvec = "1.10.0"
tynm     = "0.1.7"

crossbeam-queue = "0.3"
hashbrown       = "0.13.2"
hibitset        = { version = "0.6.3", default-features = false }
log             = "0.4.17"
shrev           = "1.1.3"
tuple_utils     = "0.4.0"
serde           = { version = "1.0.160", optional = true, features = ["serde_derive"] }
uuid            = { version = "1.3.1", optional = true, features = ["v4", "serde"] }

[features]
default               = ["parallel", "derive"]
parallel              = ["rayon", "hibitset/parallel"]
uuid_entity           = ["uuid", "serde"]
stdweb                = ["uuid/js"]
storage-event-control = []
derive                = ["gw_macro"]
nightly               = []

[dev-dependencies]
rand = "0.8"
# cgmath = "0.18.0"
gw_macro = { path = "../gw_macro" }
gw_app   = { path = "../gw_app" }

[[example]]
name              = "cluster_bomb"
required-features = ["parallel"]

[[example]]
name              = "specs_async"
required-features = ["parallel"]

[[example]]
name              = "shred_async"
required-features = ["parallel"]
